plugins {
    id 'java'
    id 'org.jetbrains.kotlin.jvm' version '1.7.22' // https://plugins.gradle.org/plugin/org.jetbrains.kotlin.jvm
    id 'org.jetbrains.intellij' version '1.10.1' // https://github.com/JetBrains/gradle-intellij-plugin/releases
}

repositories {
    maven { url 'https://cache-redirector.jetbrains.com/intellij-repository/snapshots' }
    maven { url 'https://cache-redirector.jetbrains.com/maven-central' }
}

version = version != 'unspecified' ? version : '0.0.0.1'

if (!project.hasProperty('configuration')) ext.configuration = 'Debug'

intellij {
    type = 'RD'
    version = gradle.ext.productVersion
    downloadSources = false
    instrumentCode = false
}

compileKotlin {
    kotlinOptions { jvmTarget = "11" }
}

prepareSandbox {
    from("$projectDir/../${gradle.ext.resharperPluginProjectName}/bin/${gradle.ext.reSharperVersionIdentifier}/$configuration", {
        into "${rootProject.name}/dotnet"
        include "${gradle.ext.resharperPluginProjectName}*"
    })
}

patchPluginXml {
    def historyText = file("$projectDir/../../History.md").text
    def historyMatches = historyText =~ /(?s)###(.+?)###(.+?)(?=###|$)/

    changeNotes = historyMatches.collect {
        def versionTitle = it[1]
        def versionText = it[2].replaceAll(/(?s)\r?\n/, "<br />\n")
        "<b>$versionTitle</b>$versionText"
    }.take(10).join('')

    //sinceBuild = "1xx.*"
}

runIde {
    //configDirectory = System.properties['user.home'] + '/.RiderPluginDev/config'
    //systemDirectory = System.properties['user.home'] + '/.RiderPluginDev/system'
}
